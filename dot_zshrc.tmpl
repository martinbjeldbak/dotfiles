ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download zinit if we dont have it
if [ ! -d $ZINIT_HOME ]; then
	mkdir -p "$(dirname $ZINIT_HOME)"
	git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

source "${ZINIT_HOME}/zinit.zsh"

# Load starship theme
# line 1: `starship` binary as command, from github release
# line 2: starship setup at clone(create init.zsh, completion)
# line 3: pull behavior same as clone, source init.zsh
zinit ice as"command" from"gh-r" \
          atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
          atpull"%atclone" src"init.zsh"
zinit light starship/starship

# Zsh plugins
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions

zinit wait lucid atload'_zsh_autosuggest_start' light-mode for \
    zsh-users/zsh-autosuggestions
zinit light aloxaf/fzf-tab

# Snippets
zinit snippet OMZP::git
zinit snippet OMZP::gcloud
# zinit snippet OMZP::golang # don't need completion, and don't use aliases
zinit snippet OMZP::command-not-found
zinit snippet OMZP::tmux
zinit snippet OMZP::asdf
# zinit snippet OMZP::fzf
zinit snippet OMZP::ssh
zinit snippet OMZP::docker-compose
#zinit snippet OMZP::pip
#zinit snippet OMZP::poetry
zinit snippet OMZL::key-bindings.zsh

zinit wait lucid for \
  atinit"zicompinit; zicdreplay"  \
      OMZP::colored-man-pages \
  as"completion" \
        OMZP::docker/completions/_docker

{{- if eq .chezmoi.os "darwin" }}
FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

export PATH="$PATH:/Users/madsenm1/.local/bin"
{{- end }}

# fzf completion and key-bindings
zi for \
    https://github.com/junegunn/fzf/raw/master/shell/{'completion','key-bindings'}.zsh

# Load completions
autoload -U compinit && compinit
autoload -U +X bashcompinit && bashcompinit

zinit cdreplay -q

# Keybindings
bindkey -e
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_find_no_dups

# For kill-word, see https://github.com/ohmyzsh/ohmyzsh/issues/9367
WORDCHARS=''

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors '${(s.:.)LS_COLORS}'
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous pref
zstyle ':completion:*' menu no
# preview directory's content with eza when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup

# Aliases
alias ls='eza -a --icons=auto'
alias ll='eza -l --icons=auto --no-user --group-directories-first  --time-style long-iso'
alias vim='nvim'
alias cat='bat'

# Env variables
export EDITOR='nvim'

{{- if eq .chezmoi.hostname "RV42QFMFQ4" }}
export SSL_CERT_FILE=/opt/homebrew/etc/openssl@3/cert.pem   # Various tools incl Golang
export ca_certificates_file=${SSL_CERT_FILE}                # Various tools incl Python & gsutil/boto
export CLOUDSDK_CORE_CUSTOM_CA_CERTS_FILE=${SSL_CERT_FILE}  # gcloud
export CURL_CA_BUNDLE=${SSL_CERT_FILE}                      # curl
export REQUESTS_CA_BUNDLE=${SSL_CERT_FILE}                  # Python requests library
export HTTPLIB2_CA_CERTS=${SSL_CERT_FILE}                   # Python httplib2 library
export GRPC_DEFAULT_SSL_ROOTS_FILE_PATH=${SSL_CERT_FILE}    # GRPC
{{ else }}
export ANTHROPIC_API_KEY={{ onepasswordRead "op://private/anthropic api key/credential" }}
{{ end }}

# Shell integrations
eval "$(fzf --zsh)"
eval "$(zoxide init zsh --cmd cd)"
