[user]
  email = {{ .email | quote }}
  name = Martin Bjeldbak Madsen
{{- if eq .chezmoi.hostname "RV42QFMFQ4" }}
  signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGFr92HbF1f3ZF1Tatmab7jybDq4HSLR1oT3VknO4Blx
{{- else }}
  signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJT8COxse6v5R1s66CsppcCgdhCNBQ/uPJd4f9eE2CNH
{{- end }}

[alias]

  # View abbreviated SHA, description, and history graph of the latest 20 commits
  l = log --pretty=oneline -n 50 --graph --abbrev-commit

  # View the current working tree status using the short format
  s = status -s

  # Show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

  # Pull in remote changes for the current repository and all its submodules
  p = !"git pull; git submodule foreach git pull origin master"

  # Clone a repository including all submodules
  c = clone --recursive

  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v

  # Amend the currently staged files to the latest commit
  amend = commit --amend --reuse-message=HEAD

  # Credit an author on the latest commit
  credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

  # Interactive rebase with the given number of latest commits
  reb = "!r() { git rebase -i HEAD~$1; }; r"

  # Find branches containing commit
  fb = "!f() { git branch -a --contains $1; }; f"

  # Find tags containing commit
  ft = "!f() { git describe --always --contains $1; }; f"

  # Find commits by source code
  fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

  # Find commits by commit message
  fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

  # Remove branches that have already been merged with master
  # a.k.a. 'delete merged'
  dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

  # Find the largest files throughout history
  largestfiles = "!git ls-tree -r -t -l --full-name HEAD | sort -n -k 4 | tail -n 10"

  # Find the size of the repository
  size = "!git count-objects -vH"

  # https://stackoverflow.com/questions/927358/how-do-you-undo-the-last-commit
	undo-commit = reset --soft HEAD^

  # List contributors with number of commits
  contributors = shortlog --summary --numbered

[apply]

  # Detect whitespace errors when applying a patch
  whitespace = fix

[core]

  # Treat spaces before tabs and all kinds of trailing whitespace as an error
  # [default] trailing-space: looks for spaces at the end of a line
  # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
  whitespace = space-before-tab,-indent-with-non-tab,trailing-space

  # Make `git rebase` safer on OS X
  # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false
  autocrlf = input

  pager = delta

[color "branch"]

  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]

	meta = yellow
	frag = magenta bold
	old = red bold
	new = green bold
	commit = yellow bold
	whitespace = red reverse

[color "status"]

  added = yellow
  changed = green
  untracked = cyan 

[diff]

  # Detect copies as well as renames
  renames = copies

[help]

  # Automatically correct and execute mistyped commands
  autocorrect = 1

[include]
  path =  "~/.local/share/delta-catppuccin/catppuccin.gitconfig"

[merge]

  # Include summaries of merged commits in newly created merge commit messages
  log = true

[push]
  default = simple
  autoSetupRemote = true

# URL shorthands

{{- if eq .chezmoi.hostname "RV42QFMFQ4" }}
[url "ssh://git@github.com/"]
	insteadOf = https://github.com/

[url "ssh://git@github.service.anz/"]
	insteadOf = https://github.com/
{{- end }}

[url "git@github.com:"]

  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"

[url "git://github.com/"]

  insteadOf = "github:"

[url "git@gist.github.com:"]

  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]

  insteadOf = "gist:"

[user]
	useconfigonly = true
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[credential]
	helper = osxkeychain
[filter "lfs"]
	smudge = git-lfs smudge -- %f
	required = true
	clean = git-lfs clean -- %f
	process = git-lfs filter-process
[commit]
	gpgsign = true
[gui]
[gpg]
	format = ssh
[gpg "ssh"]
{{- if eq .chezmoi.os "darwin" }}
	program = /Applications/1Password.app/Contents/MacOS/op-ssh-sign
{{- else }}
        program = /opt/1Password/op-ssh-sign
{{- end }}
[color]
	ui = true
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22


[pager]
    diff = delta
    log = delta
    reflog = delta
    show = delta

[interactive]
#	diffFilter = delta --diff-so-fancy --patch
	diffFilter = delta --color-only

[delta]
    features = catppuccin-frappe decorations # line-numbers 
    whitespace-error-style = 22 reverse
    syntax-theme = Nord
    navigate = true # use n and N to move between diff sections

[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none

[merge]
    conflictstyle = zdiff3

[pull]
	rebase = false
[init]
	defaultBranch = main
